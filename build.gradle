plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building a CLI application
    id 'application'
}

sourceSets {
    main {
        java.srcDir 'src'
        resources.srcDir 'res'
    }
}

repositories {
    mavenCentral()
}

def slf4jVersion = "1.7.26"


dependencies {
    compile group: 'org.slf4j', name: 'slf4j-api', version: "$slf4jVersion"
    compile group: 'org.slf4j', name: 'slf4j-log4j12', version: "$slf4jVersion"

    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.5'
    compile group: 'com.typesafe', name: 'config', version: '1.4.0'
    compile group: 'com.zaxxer', name: 'HikariCP', version: '3.4.1'

    compile group: 'org.telegram', name: 'telegrambots', version: '4.5'
}

application {
    // Define the main class for the application
    mainClassName = 'tlc200bot.Launcher'
}

jar {
    manifest {
        def manifestClasspath =
                configurations.compile.collect { it.getName() }.join(' ') + ' ' +
                        configurations.runtime.collect { it.getName() }.join(' ')

        attributes 'Implementation-Title': 'tlc200bot',
                'Main-Class': 'tlc200bot.Launcher',
                'Class-Path': manifestClasspath
    }
}

task dist(type: Copy, dependsOn: build) {
//    from '../util/build/libs'

    from(configurations.runtime)
    from(jar)

    from('etc') {
//        include('run.sh')
//        include('run_prod.sh')
    }

//    into('config') {
//        from('config') {
//            include('*.sample')
//        }
//    }

    into 'dist'
}

build.finalizedBy(dist)